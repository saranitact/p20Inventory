pipeline {
  agent{
     node {
       label 'master'
     }
    }
/*     tools { 
        maven MAVEN_HOME 
    }*/
 environment{
        JENKINS_HOME= "E:\\Users\\SARAN\\workspace\\p20Inventory"
       // M2_HOME=%Maven_HOME%
    }
    stages {
        stage("Git Checkout from Jenkinsfile declarative"){
           steps{
                git credentialsId: 'github', url: 'https://github.com/saranitact/Inventory'
                 echo 'Git Checkout from Jenkinsfile declarative Completed'
            }
        }
         stage("Maven Build to test Webhook via plugin"){
            steps{
                bat 'echo "M2_HOME: %Maven_HOME%"'
                 bat 'echo "JENKINS_HOME: %JENKINS_HOME%"'
                 bat 'mvn clean test'
                echo 'Compile and Unit Test Completed'
            }
        }
        /* stage('Static Analysis'){
            steps{
                   bat 'xcopy E:\\Users\\SARAN\\workspace\\p20Inventory %WORKSPACE%\\ /s /y'
                   withSonarQubeEnv('SonarQube_Home') {
                    bat 'mvn sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dsonar.login=94a5afcdac3bcf731bfa5467a0169fe806b31601' 
                    echo 'Static Analysis Completed'
                 }
              }
         }
          stage("Quality Gate"){
             steps {
                timeout(time: 10, unit: 'MINUTES') {
                    script  {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
              echo 'Quality Gate Passed'
           }
        } */
        stage('Package') {
          steps{
                bat 'mvn -U -DskipTests package'
                echo 'Package Completed'
          }
       }
       stage('Deploy') {
         steps{
                bat 'mvn -U -DskipTests tomcat7:deploy -Dtomcat.username=<uname> -Dtomcat.password=<pword>'
                echo 'Deploy Completed'
          }
       ) 
      } //stages
  } //pipeline
